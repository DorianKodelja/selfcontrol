#!/usr/bin/perl
#
# SelfControl -- Stop internet distractions so you can get some work done.
#
my $ID = {
        date => q$Date$,
        headurl => q$HeadURL$,
        author => q$Author$,
        revision => q$Revision$,
};
use strict;
use warnings;
use Sys::Syslog;
#use YAML ();
use SelfControl;
use SelfControl::Root;
#use SelfControl::Config;

openlog('SelfControl','pid','local0');

#
# Get config from $ENV{HOME} of calling user.  Some trickery
# involved since %ENV is cleared by sudo for security reasons.
# Get from passwd by uid.
#
my $UID = $<;
$UID = $ENV{SUDO_UID} if exists $ENV{SUDO_UID};
my $HOME = (getpwuid($UID))[7];
my $ConfigFile = "$HOME/.selfcontrol";

#
# if root, apply Config and exit.
#
if ($< == 0) {
  syslog('info','starting root');
  my $app = SelfControl::Root->new({config_file => $ConfigFile});
  $app->run;
  syslog('info','finished root');
  closelog;
  exit;
}

#
# not root
#

syslog('info','starting user');

=for comment - future non-gui interface.

if (-t STDIN) {
  @SUDO = (sudo => '-p' => "Enter your password to perform administrative tasks.\nThe application 'This Program' lets you modify essential parts of your system.\nEnter Password:");
}
else {
  @SUDO = (gksudo => '-D' => 'This Program');
}

=cut

my $app = SelfControl->new({
  config_file => $ConfigFile,
  sudo => [gksudo => '-D' => 'selfcontrol'],
});
#$app->{config}{can_queue} = 1;
$app->run;

syslog('info','finished user');
closelog;
exit;
